#!/bin/bash

# Written by Anagnostakis Ioannis GR Crete <rizitis@gmail.com> 03/2023
# This sqf2dep script can fork SBo repo and create package.dep and slack-required files if your package-manager need them...
# Also will find for you the packages that dependees on "$i"package in and print "dependees-on" files in SlackBuild folder
# After all you can use it as local repo or upload it as public if you can maintain it...
# In that case you should run this script minimum ones per week to update it. 
# LICENCE https://raw.githubusercontent.com/rizitis/sqf2dep/main/LICENSE
# Take the idea of script and make it better...

# run script like this:
# nice -n -20 bash /path/to/script
# replace -20 with the number of cores you want to use ;)

if [ "$EUID" -ne 0 ];then
echo "ROOT ACCESS PLEASE OR GO HOME..."
exit 1
fi

start_time=$(date +%s)
#*************************************************************************************************************************
# If you want to use ponce repo for Slackware-current, (I did it for this script), then create a file (or edit if exist) *
# /root/.sbopkg.conf                                                                                                     *
# add these 2 lines inside:                                                                                              *
# REPO_NAME=SBo-git                                                                                                      *
# REPO_BRANCH=current                                                                                                    *
#*************************************************************************************************************************

# synchronize sbopkg with remote repo 
sbopkg -r || exit
# create for all packages that need deps a package.sqf file
sqg -a
rm /var/lib/sbopkg/queues/Mumble* || true
# update local Slackware system database
/usr/bin/updatedb

# create package.dep and slack-required files
dir=/tmp/sqf2dep
rm -r $dir
for i in $(ls /var/lib/sbopkg/queues/); do
mkdir -p $dir || exit
mkdir -p $dir/"$i" || exit
cat /var/lib/sbopkg/queues/"$i" > $dir/"$i"/"$i"
cat /var/lib/sbopkg/queues/"$i" > $dir/"$i"/slack-required
cd $dir || exit
rename 'sqf' 'dep' "$i"/*.sqf
rename '.sqf' '' "$i"
done
# create dependees-on 
cd $dir || exit
# Loop through all the directories in the current directory
for dirpath in */; do
    # Check if the slack-required file exists in the current directory
    if [ -f "$dirpath/slack-required" ]; then
        # Read the package names from the slack-required file
        package_names=$(cat "$dirpath/slack-required")
        
        # Loop through the package names and find the corresponding folders
        for package_name in $package_names; do
            for sub_dirpath in ./*; do
                if [ -d "$sub_dirpath" ] && [[ "$sub_dirpath" == *"$package_name"* ]]; then
                    # Write the folder name to the dependees-on file
                    echo "${dirpath%/}" >> "$sub_dirpath/dependees-on"
                fi
            done
        done
    fi
done
# Here I focuss to ponce repo , for the Slackware-stable slackbuilds repo following commands need a lot of edits...
repo=/tmp/slackbuilds-current
cd /tmp || exit
rm current.zip*
rm -r $repo
wget https://github.com/Ponce/slackbuilds/archive/refs/heads/current.zip
unzip current.zip
# Not needed any more
rm current.zip 
cd $repo || exit
# copy paste .dep and slack-required and dependees-on files to correct repo folders.
for i in $(ls /tmp/sqf2dep/); do
if [[ -s "/tmp/sqf2dep/"$i"/slack-required" ]]
then
  cp /tmp/sqf2dep/"$i"/dependees-on $repo/*/"$i"/
  cp /tmp/sqf2dep/"$i"/slack-required $repo/*/"$i"/
  cp /tmp/sqf2dep/"$i"/"$i".dep $repo/*/"$i"/
fi
done


dir=/tmp/sqf2dep
repo=/tmp/slackbuilds-current
file=$repo/*/$i/
pattern='cd $PKG'
line='if [ -f $CWD\/slack-required ]; then cat $CWD\/slack-required > $PKG\/install\/slack-required; fi'
line2='if [ -f $CWD\/dependees-on ]; then cat $CWD\/dependees-on > $PKG\/install\/dependees-on; fi'
line3='if [ -f $CWD\/$PRGNAM.dep ]; then cp $CWD\/$PRGNAM.dep  $OUTPUT\/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.dep; fi'
cd $repo || exit 

shopt -s nullglob 


if [ ${#file[@]} -gt 0 ]
then 
find . -name "*.SlackBuild" -exec sed -i "s/$pattern/$line\n$pattern/g" {} \; 
wait
find . -name "*.SlackBuild" -exec sed -i "s/$pattern/$line2\n$pattern/g" {} \; 
wait
#find . -name  "*.SlackBuild" -exec sed -i -e '$aif [ -f $CWD\/$PRGNAM.dep ]; then cp $CWD\/$PRGNAM.dep  $OUTPUT\/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.dep; fi' {} \;
find . -name  "*.SlackBuild" -exec sed -i -e '$aif [ -f $CWD\/slack-required ]; then cp $CWD\/slack-required  $OUTPUT\/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.dep; fi' {} \;
wait
else 
echo "Oh my God, epic fail again..."
fi 

# fix slack-required, some packages have as dep it self :\ #
cd $repo || exit 

# step1: Save the original directory
original_dir="$repo"

# step2: Find subdirectories with a slack-required file
for folder in */*/; do
  if [ -f "$folder/slack-required" ]; then
    echo "Entering directory: $folder"
    cd "$folder"
    
# step3: Get the basename of the current directory
    dir_name="$(basename "$(pwd)")"
    
# step4: finger cross... Perform the sed operation
    sed -i "s/$dir_name//g" slack-required
    
# step5: Return to the original directory and keep going...
    cd "$original_dir"
  fi
done
# Make new SLACKBUILDS.TXT using @bassmadrigal script https://www.linuxquestions.org/questions/slackware-14/script-for-building-a-slackbuilds-txt-4175598436/#post5661600
repo=/tmp/slackbuilds-current 
cd $repo || exit
wget -c https://raw.githubusercontent.com/rizitis/sqf2dep/main/create-SLACKBUILDS_TXT
chmod +x create-SLACKBUILDS_TXT
bash create-SLACKBUILDS_TXT > SLACKBUILDS.TXT
wait
rm create-SLACKBUILDS_TXT*
# create BUILDS.TXT
wget -c https://raw.githubusercontent.com/rizitis/sqf2dep/main/BUILDS.bash
chmod +x BUILDS.bash
bash BUILDS.bash
rm BUILDS.bash

end_time=$(date +%s)

elapsed_time=$(($end_time - $start_time))

echo ""
echo ""
echo "Elapsed time: $elapsed_time seconds"
